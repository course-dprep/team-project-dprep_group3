packages <- c("reshape2", "rmarkdown",
"data.table", "Hmisc", "dplr",
"stargazer", "knitr",
"xtable","tidyverse",
"RSQLite", "dbplyr")
install.packages(packages)
setwd("C:/Users/lenovo/Desktop/Data Prep in Class/project/team-project-dprep_group3/pivot_table")
library(data.table)
library(readr)
library(dplyr)
download_data <- function(url, filename){
download.file(url = url, destfile = paste0(filename, ".csv"))
}
url_crew <- "https://datasets.imdbws.com/title.crew.tsv.gz"
url_ratings <- "https://datasets.imdbws.com/title.ratings.tsv.gz"
url_basics <- "https://datasets.imdbws.com/title.basics.tsv.gz"
url_name <- "https://datasets.imdbws.com/name.basics.tsv.gz"
download_data(url_crew, "crew")
download_data(url_ratings, "ratings")
download_data(url_basics, "basics")
download_data(url_name, "name")
crew <- read_delim("crew.csv", delim = "\t", col_names = TRUE)
ratings <- read_delim("ratings.csv", delim = "\t", col_names = TRUE)
name <- read_delim("name.csv", delim = "\t", col_names = TRUE)
basics <-read_delim("basics.csv", delim = "\t", col_names = TRUE)
# FILTER
# Filter for Movies
library(dplyr)
# FILTER
# Filter for Movies
library(dplyr)
movies <- basics %>%
filter(titleType == "movie") %>%
select(tconst) # Keeping only the tconst identifier for merging
# Filter to include only those whose primaryProfession includes 'director' in "name" file
# Load necessary libraries
library(stringr)
directors_dt <- name %>%
filter(str_detect(primaryProfession, "director")) %>%
select(-birthYear, -deathYear, -knownForTitles)
# for "crew" file writers column removed
crew_filtered <- crew %>%
select(tconst, directors)
# Merge movies with ratings
movies_with_ratings <- left_join(movies, ratings, by = "tconst")
crew_directors <- left_join(crew_filtered, directors_dt, by = c("directors" = "nconst"))
movies_ratings_with_directors <- left_join(movies_with_ratings, crew_directors, by = "tconst")
# REMOVE MISSING VALUES
movies_ratings_with_directors_cleaned <- movies_ratings_with_directors %>%
filter(complete.cases(.))
movies_ratings_with_directors_cleaned <- movies_ratings_with_directors_cleaned %>%
filter(across(everything(), ~ !grepl("\\\\N", .x)))
# Store the final data frame as aggregated_df.csv
write_csv(movies_ratings_with_directors_cleaned, "aggregated_df.csv")
## import the data
df <- read_csv("aggregated_df.csv")
## create pivot table
# Pivot the data to get average rating for each director
pivot_table <- df %>%
group_by(directors, primaryName, tconst) %>%
summarize(avg_rating = mean(averageRating, na.rm = TRUE),
total_votes = sum(numVotes, na.rm = TRUE)) %>%
arrange(desc(avg_rating))  # Sort by average rating in descending order
write_csv(pivot_table, "pivot_table.csv")
View(pivot_table)
View(movies_with_ratings)
View(movies_ratings_with_directors)
View(crew_filtered)
View(movies_with_ratings)
View(movies_ratings_with_directors_cleaned)
